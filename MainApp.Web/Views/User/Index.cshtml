@using MainApp.BLL.Context
@using MainApp.BLL.Entities
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using Microsoft.EntityFrameworkCore
@model IEnumerable<MainApp.BLL.Models.UserView>
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext _context

@{
    ViewData["Title"] = "Index";
}

<h1>List of users</h1>

<h2> Server : @TempData["Provider"]</h2>

<div class="card mt-5 shadow-lg">
   <div class="card-header">
         List of users
   </div>
      <div class="card-body">
         <p class="card-text">
            <div class="row">
               <div class="col">

<table class="table">
    <thead>
        <tr>
            <th>
               
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserRole)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                    @{
                        var userByMail = await UserManager.FindByEmailAsync(item.Email);

                        var roleUser = await _context.UserRoles.Where(x=>x.UserId == userByMail.Id).Select(x=>x.RoleId).FirstOrDefaultAsync();

                        var roleName = await _context.Roles.Where(x=>x.Id == roleUser).Select(x=>x.Name).FirstOrDefaultAsync();

                        if (roleName.Contains("Admin"))
                        {
                            <img class="rounded" alt="Image placeholder" src="~/icons8-admin-settings-male-32.png">
                        }
                        else
                        {
                            <img class="rounded" alt="Image placeholder" src="~/icons8-person-32.png">
                        }

                        var userLocked = await UserManager.IsLockedOutAsync(userByMail);
                        if (userLocked)
                        {
                            <img class="rounded" alt="Image placeholder" src="~/icons8-locked-user-32.png">
                        }
                    }
              
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @item.Email
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @roleName
                @*@item.UserRole*@
            </td>
            <td>
                @*<a class="btn btn-success" asp-action="Edit" asp-route-id="@_context.Users.Where(x=>x.Email == item.Email).Select(x=>x.Id).FirstOrDefault()" data-toggle="tooltip" data-placement="top" title="Edit"><img class="rounded" alt="Image placeholder" src="~/editX32.png"></a> 
                <a class="btn btn-info" asp-action="Details" asp-route-id="@_context.Users.Where(x=>x.Email == item.Email).Select(x=>x.Id).FirstOrDefault()" data-toggle="tooltip" data-placement="top" title="Details"><img class="rounded" alt="Image placeholder" src="~/employeeX32.png"></a> *@
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@_context.Users.Where(x=>x.Email == item.Email).Select(x=>x.Id).FirstOrDefault()" data-toggle="tooltip" data-placement="top" title="Delete"><img class="rounded" alt="Image placeholder" src="~/trash-binX32.png"></a>
            </td>
        </tr>
}
    </tbody>
</table>

            </div>
         </div>
       </p>
     <a href="/Home/index" class="btn btn-primary">Go to Home</a>
  </div>
</div>