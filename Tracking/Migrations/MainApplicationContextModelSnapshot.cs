// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tracking.Context;

namespace Tracking.Migrations
{
    [DbContext(typeof(MainApplicationContext))]
    partial class MainApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("Tracking.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Tracking.Models.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Trainers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 3, 26, 19, 23, 45, 357, DateTimeKind.Utc).AddTicks(9701),
                            Email = "ps@example.com",
                            FirstName = "Patryk",
                            LastName = "Szwermer",
                            Phone = ""
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 3, 26, 19, 23, 45, 357, DateTimeKind.Utc).AddTicks(9951),
                            Email = "ps@example.com",
                            FirstName = "Przemyslaw",
                            LastName = "sawicki",
                            Phone = ""
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 3, 26, 19, 23, 45, 357, DateTimeKind.Utc).AddTicks(9954),
                            Email = "md@example.com",
                            FirstName = "Marcin",
                            LastName = "Dabrowski",
                            Phone = ""
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 3, 26, 19, 23, 45, 357, DateTimeKind.Utc).AddTicks(9955),
                            Email = "pk@example.com",
                            FirstName = "Piotr",
                            LastName = "Katny",
                            Phone = ""
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 3, 26, 19, 23, 45, 357, DateTimeKind.Utc).AddTicks(9957),
                            Email = "md@example.com",
                            FirstName = "Marcin",
                            LastName = "Dudzic",
                            Phone = ""
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2022, 3, 26, 19, 23, 45, 357, DateTimeKind.Utc).AddTicks(9960),
                            Email = "mk@example.com",
                            FirstName = "Maciej",
                            LastName = "Krakowiak",
                            Phone = ""
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2022, 3, 26, 19, 23, 45, 357, DateTimeKind.Utc).AddTicks(9961),
                            Email = "jk@example.com",
                            FirstName = "Jakub",
                            LastName = "Nowikowski",
                            Phone = ""
                        });
                });

            modelBuilder.Entity("Tracking.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Tracking.Models.Event", b =>
                {
                    b.HasOne("Tracking.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
